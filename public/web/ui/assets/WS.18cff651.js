import{S as N,i as Q,s as U,e as a,g as h,t as H,a as P,b as J,k as t,o as k,p as K,n as E,d as L,z as Y,A as Z,V as $,X as d}from"./index.6af32dc5.js";function F(c,e,i){const _=c.slice();return _[8]=e[i],_}function G(c){let e,i=c[8]+"",_;return{c(){e=a("div"),_=H(i)},m(l,u){J(l,e,u),t(e,_)},p(l,u){u&1&&i!==(i=l[8]+"")&&K(_,i)},d(l){l&&L(e)}}}function ee(c){let e,i,_,l,u=c[1].time+"",C,j,p,g,q,r,x,S,z,A,I,f,W,M,w,O,D,R,m,y,X,b=c[0],o=[];for(let n=0;n<b.length;n+=1)o[n]=G(F(c,b,n));return{c(){e=a("article"),i=a("h1"),i.textContent="Testing WS",_=h(),l=a("p"),C=H(u),j=h(),p=a("div"),g=a("button"),g.textContent='get "time"',q=h(),r=a("button"),r.textContent='subscribe "time"',x=h(),S=a("button"),S.textContent='unsubscribe "time"',z=h(),A=a("hr"),I=h(),f=a("div"),W=a("button"),W.textContent="open",M=h(),w=a("button"),w.textContent="send",O=h(),D=a("button"),D.textContent="close",R=h(),m=a("div");for(let n=0;n<o.length;n+=1)o[n].c();P(p,"class","flex"),P(f,"class","flex"),P(m,"class","grid gap-0"),P(e,"class","grid svelte-igpera")},m(n,v){J(n,e,v),t(e,i),t(e,_),t(e,l),t(l,C),t(e,j),t(e,p),t(p,g),t(p,q),t(p,r),t(p,x),t(p,S),t(e,z),t(e,A),t(e,I),t(e,f),t(f,W),t(f,M),t(f,w),t(f,O),t(f,D),t(e,R),t(e,m);for(let s=0;s<o.length;s+=1)o[s].m(m,null);y||(X=[k(g,"click",c[2]),k(r,"click",c[3]),k(S,"click",c[4]),k(W,"click",c[5]),k(w,"click",c[6]),k(D,"click",c[7])],y=!0)},p(n,[v]){if(v&2&&u!==(u=n[1].time+"")&&K(C,u),v&1){b=n[0];let s;for(s=0;s<b.length;s+=1){const B=F(n,b,s);o[s]?o[s].p(B,v):(o[s]=G(B),o[s].c(),o[s].m(m,null))}for(;s<o.length;s+=1)o[s].d(1);o.length=b.length}},i:E,o:E,d(n){n&&L(e),Y(o,n),y=!1,Z(X)}}}const T="192.168.1.246",V=23;function te(c,e,i){let _;$(c,d,r=>i(1,_=r)),d.setDebug(!0),d.connect({ip:"192.168.1.9",port:"4620"}),d.receive.json(r=>{console.log(r)});let l=[];return d.receive.event(`/tcp/client/v1/${T}:${V}`,(r,x)=>{r==="send"||r==="receive"?i(0,l=[...l,x.ascii]):r==="open"?i(0,l=[...l,"connection open"]):r==="close"&&i(0,l=[...l,"connection closed"])}),[l,_,()=>d.send.get("time"),()=>d.send.subscribe("time"),()=>d.send.unsubscribe("time"),()=>d.send.event("/tcp/client/v1","open",{ip:T,port:V,expectedDelimiter:"\r"}),()=>d.send.event("/tcp/client/v1","send",{ip:T,port:V,data:"MV?",encoding:"ascii",cr:!0,lf:!1}),()=>d.send.event("/tcp/client/v1","close",{ip:T,port:V})]}class ne extends N{constructor(e){super(),Q(this,e,te,ee,U,{})}}export{ne as default};
